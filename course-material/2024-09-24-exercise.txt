Here are a few optional exercises to deepen knowledge about some of the topics (requires some basic knowledge of R; see https://www.r-project.org/ and https://posit.co/download/rstudio-desktop/ to download the software). You can install some R packages with the following commands:

install.packages("BiocManager")
BiocManager::install(c("pheatmap","M3C"))

1. Perform a t-test to formally the test whether there is evidence to suggest that, on average, ETHZ students performed better than UZH students on an exam (i.e., mean of ETHZ students is higher than mean of UZH students).

Here is some R code to define the exam scores:
eth <- c(45, 37, 46, 46, 42, 36, 29, 45, 24, 26, 40, 49, 34, 43, 37,
         57, 38, 40, 40, 31, 38, 39, 42, 25, 44, 25, 53, 37, 37, 40)
uzh <- c(32, 45, 52, 50, 39, 42, 45, 37, 48, 51, 40, 27, 43, 49, 50,
         46, 37, 43, 45, 44, 33, 41, 34, 41, 31, 36, 36, 46, 39, 20)

Use the t.test() function for testing. Interpret the result.


2. Take a dataset and perform a UMAP dimension reduction of it

# Here is some R code to load a down-sampled scRNA-seq dataset:
d <- read.table("http://imlspenticton.uzh.ch/teaching/BIO390/scRNAseq_table.txt", 
                sep = "\t", header = TRUE)
label <- d$label
d$label <- NULL

Use the prcomp() function to perform a PCA of the data.frame 'd'. Plot the first two principal components (look in the $x element in the output of prcomp). Best would be to use ggplot2 to plot the points of the "embedding", colored by the label variable.

Take the data.frame 'd' and perform a UMAP embedding (i.e., dimension reduction). One option is to use the umap() function in the M3C package.



3. Hierarchically cluster and plot a heat map.

Here is some R code 
x <- structure(c(1, 0.42, 0.48, 0.44, 0.28, 0.44, 0.45, 0.41, 0.45, 
0.48, 0.42, 1, 0.41, 0.38, 0.27, 0.4, 0.42, 0.52, 0.37, 0.57, 
0.48, 0.41, 1, 0.87, 0.29, 0.54, 0.56, 0.47, 0.53, 0.57, 0.44, 
0.38, 0.87, 1, 0.29, 0.51, 0.52, 0.44, 0.51, 0.52, 0.28, 0.27, 
0.29, 0.29, 1, 0.29, 0.3, 0.25, 0.28, 0.32, 0.44, 0.4, 0.54, 
0.51, 0.29, 1, 0.48, 0.36, 0.51, 0.56, 0.45, 0.42, 0.56, 0.52, 
0.3, 0.48, 1, 0.52, 0.49, 0.56, 0.41, 0.52, 0.47, 0.44, 0.25, 
0.36, 0.52, 1, 0.43, 0.45, 0.45, 0.37, 0.53, 0.51, 0.28, 0.51, 
0.49, 0.43, 1, 0.41, 0.48, 0.57, 0.57, 0.52, 0.32, 0.56, 0.56, 
0.45, 0.41, 1), dim = c(10L, 10L), dimnames = list(c("f55", "f50", 
"f21", "f24", "f58", "f10", "f12", "f32", "f2", "f49"), c("f55", 
"f50", "f21", "f24", "f58", "f10", "f12", "f32", "f2", "f49")))

Load the 'pheatmap' package with:
library(pheatmap)

Use the following command:
pheatmap(x)

Try alternative options for the 'clustering_distance_rows' argument (distance metric) and for the 'clustering_method' argument (linkage method). To read more details about these options, use:
?pheatmap

